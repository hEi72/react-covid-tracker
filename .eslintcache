[{"/Users/jeang/Playground/react/covid-tracker/src/index.js":"1","/Users/jeang/Playground/react/covid-tracker/src/App.js":"2","/Users/jeang/Playground/react/covid-tracker/src/reportWebVitals.js":"3","/Users/jeang/Playground/react/covid-tracker/src/Infobox.js":"4","/Users/jeang/Playground/react/covid-tracker/src/Map.js":"5","/Users/jeang/Playground/react/covid-tracker/src/PageMap.js":"6","/Users/jeang/Playground/react/covid-tracker/src/PageHistory.js":"7","/Users/jeang/Playground/react/covid-tracker/src/Table.js":"8","/Users/jeang/Playground/react/covid-tracker/src/util.js":"9","/Users/jeang/Playground/react/covid-tracker/src/LineGraph.js":"10"},{"size":500,"mtime":1609147857119,"results":"11","hashOfConfig":"12"},{"size":2673,"mtime":1609256325405,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1609147857120,"results":"14","hashOfConfig":"12"},{"size":915,"mtime":1609266279469,"results":"15","hashOfConfig":"12"},{"size":1277,"mtime":1609255667759,"results":"16","hashOfConfig":"12"},{"size":5880,"mtime":1609265226095,"results":"17","hashOfConfig":"12"},{"size":1190,"mtime":1609245831207,"results":"18","hashOfConfig":"12"},{"size":427,"mtime":1609237495697,"results":"19","hashOfConfig":"12"},{"size":1929,"mtime":1609248111261,"results":"20","hashOfConfig":"12"},{"size":2712,"mtime":1609271021322,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1jmb7ms",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jeang/Playground/react/covid-tracker/src/index.js",[],["44","45"],"/Users/jeang/Playground/react/covid-tracker/src/App.js",["46"],"/Users/jeang/Playground/react/covid-tracker/src/reportWebVitals.js",[],"/Users/jeang/Playground/react/covid-tracker/src/Infobox.js",[],"/Users/jeang/Playground/react/covid-tracker/src/Map.js",[],"/Users/jeang/Playground/react/covid-tracker/src/PageMap.js",["47","48"],"import React, { useState, useEffect, useMemo, useCallback }  from 'react';\nimport { FormControl, Select, MenuItem } from \"@material-ui/core\";\nimport Infobox from \"./Infobox\";\nimport { MapContainer, TileLayer } from \"react-leaflet\";\n// import Map from \"./Map\";\nimport \"./Map.css\";\nimport \"leaflet/dist/leaflet.css\";\nimport { showDataOnMap } from \"./util\";\n\nfunction PageMap({ casesType, setCasesType }) {\n    const [countries, setCountries] = useState([]);\n    const [country, setCountry] = useState(\"worldwide\");\n    const [countryInfo, setCountryInfo] = useState({});\n    const [mapCountries, setMapCountries] = useState([]);\n\n    const mapDefaultLat = 22.3737889;\n    const mapDefaultLong = 114.142338;\n    const mapDefaultZoom = 11;\n    let mapCenter = [ mapDefaultLat, mapDefaultLong ];\n    let mapZoom = mapDefaultZoom;\n\n    useEffect(() => {\n        fetch(\"https://disease.sh/v3/covid-19/countries\")\n        .then((response) => response.json())\n        .then((data) => {\n            setMapCountries(data);\n\n            const countries = data.map((item) => ({\n                name: item.country,\n                value: item.countryInfo.iso2\n            }));\n\n            setCountries(countries);\n        });\n\n        fetch(\"https://disease.sh/v3/covid-19/all\")\n        .then((response) => response.json())\n        .then((data) => {\n            setCountryInfo(data);\n        })\n    }, []);\n\n    const onCountryChange = async (e) => {\n        const countryCode = e.target.value;\n        const url = \n        countryCode === \"worldwide\"\n        ? \"https://disease.sh/v3/covid-19/all\"\n        : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n\n        await fetch(url)\n        .then((response) => response.json())\n        .then((data) => {\n            setCountry(countryCode);\n            console.log(data);\n            setCountryInfo(data);\n\n            if (countryCode === \"worldwide\") {\n                mapCenter = [mapDefaultLat, mapDefaultLong];\n                mapZoom = mapDefaultZoom;\n            } else {\n                mapCenter = [data.countryInfo.lat, data.countryInfo.long];\n                mapZoom = 5;\n            }\n            map.setView(mapCenter, mapZoom);\n        });\n    };\n\n    //! Map\n    const [map, setMap] = useState(null);\n\n    const displayMap = useMemo(\n    // const displayMap = useEffect(\n        () => (\n        <MapContainer center={mapCenter} zoom={mapZoom} scrollWheelZoom={false} whenCreated={setMap}>\n            <TileLayer\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            />\n            {/* Loop through all countries and draw circles on map */}\n            {showDataOnMap(mapCountries, casesType)}\n        </MapContainer>\n        ),\n        [mapCenter, mapZoom, mapCountries, casesType],\n    );\n\n    return (\n        <div className=\"pageMap\">\n            {/* Left */}\n            <div className=\"pageMap__left\">\n                {/* Infobox */}\n                <div className=\"pageMap__stats\">\n                    <Infobox \n                        title = \"Confirmed\" \n                        value = \"cases\"\n                        active = {casesType === \"cases\"} \n                        cases = {countryInfo.todayCases} \n                        total = {countryInfo.cases} \n                        onClick = {(e) => setCasesType(\"cases\")} \n                    />\n                    <Infobox  \n                        title = \"Recovered\" \n                        value = \"recovered\"\n                        active = {casesType === \"recovered\"} \n                        cases = {countryInfo.todayRecovered} \n                        total = {countryInfo.recovered} \n                        onClick = {(e) => setCasesType(\"recovered\")} \n                    />\n                    <Infobox \n                        title = \"Deaths\" \n                        value = \"deaths\"\n                        active = {casesType === \"deaths\"} \n                        cases = {countryInfo.todayDeaths} \n                        total = {countryInfo.deaths} \n                        onClick = {(e) => setCasesType(\"deaths\")} \n                    />\n                </div>\n            </div>\n\n            {/* Right */}\n            <div className=\"pageMap__right\">\n                <div className=\"pageMap__topBar\">\n                    {/* Individual & Area risk score */}\n                    <div className=\"pageMap__topBar__riskScores\">\n                        <div>\n                            <h3>Individual Risk Score</h3>\n                            <h4>75</h4>\n                        </div>\n                        <div>\n                            <h3>Area Risk Score</h3>\n                            <h4>53</h4>\n                        </div>\n                    </div>\n                    {/* Dropdown */}\n                    <FormControl className=\"pageMap__dropdown\">\n                        <Select variant=\"outlined\" value={country} onChange={onCountryChange}>\n                            <MenuItem value=\"worldwide\">Worldwide</MenuItem>\n                            {\n                            countries.map((country) => (\n                                <MenuItem value={country.value}>{country.name}</MenuItem>\n                            ))\n                            }\n                        </Select>\n                    </FormControl>\n                </div>\n\n                {/* Map */}\n                <div className=\"pageMap__map\">\n                    {displayMap}\n                    {/* <Map\n                        countries={mapCountries}\n                        casesType={casesType}\n                        center={mapCenter}\n                        zoom={mapZoom}\n                    /> */}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default PageMap\n","/Users/jeang/Playground/react/covid-tracker/src/PageHistory.js",[],"/Users/jeang/Playground/react/covid-tracker/src/Table.js",[],"/Users/jeang/Playground/react/covid-tracker/src/util.js",[],"/Users/jeang/Playground/react/covid-tracker/src/LineGraph.js",[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":51,"column":9,"nodeType":"55","messageId":"56","endLine":51,"endColumn":16},{"ruleId":"53","severity":1,"message":"57","line":1,"column":47,"nodeType":"55","messageId":"56","endLine":1,"endColumn":58},{"ruleId":"58","severity":1,"message":"59","line":19,"column":9,"nodeType":"60","endLine":19,"endColumn":54},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"no-unused-vars","'classes' is assigned a value but never used.","Identifier","unusedVar","'useCallback' is defined but never used.","react-hooks/exhaustive-deps","The 'mapCenter' array makes the dependencies of useMemo Hook (at line 83) change on every render. To fix this, wrap the initialization of 'mapCenter' in its own useMemo() Hook.","VariableDeclarator","no-global-assign","no-unsafe-negation"]